# General setup
# -------------
sudo: required
dist: trusty
language: python
python:
    - "2.7"
# Allows the python virtualenv to use apt-get installed packages, which
# is essential (as ROS recommends this and pip doesn't seem to contain
# all packages, or contains them with errors).
virtualenv:
    system_site_packages: true
# Allow caching of debian (apt-get) packages. This means they're cached
# on Travis, so we still have to download/install them, but it will be
# faster than going to the ubuntu repositories.
cache: apt
# Before anything, see if we can get the mongoDB troubles out of the way.
# Note that this is a Travis-CI specific problem; this is not needed in
# general.
before_install: # Use this to prepare the system to install prerequisites or dependencies
    # Define some config vars
    - sudo apt-get --purge remove mongodb-10gen postgresql-9.2 postgresql-contrib-9.2 postgresql-9.3 postgresql-contrib-9.3
    - export ROS_DISTRO=indigo
    # Settings to make installing script more general.
    - export ROS_CI_DESKTOP=`lsb_release -cs`  # e.g. 'precise'
    - export ROS_MASTER_URI=http://localhost:11311

notifications:
  email: false
  slack:
    secure: "ixnYBnrkukOvT8lX8QqF9rjubf4wjiT7YCqxy3NPoDHoonoGg1df/nnyqXRl+7srAX43dbVRkYEfWbrCACzEj+7lhMqvgOpVTXqZCDNa6Qfl/l8x73UsFKInhhDCsbGxLEa9q8zjxLiyw+RA2bkNV7uCnekI7qml36P4/L2U3vjiotqQofgREf+KUrey91uZJ+F7LO73IY2taMXn1y5PESxPgzDGgyHJXW0nS5qIxlacLWgtTGKu8e98kHAwzlqfzQOjmS+c0tsvfTUnaUFn237FLFSchs9yFBdL0Q2ZgbmX3YzZmrIGjGDkFp5iZ5UOpTdkFW5N2UlVlzjlujWjRZHJKP6KseGU2x+OjQZ5VTVqOcFyFP9NCfzTaZaqfoXQS5MpEHaKvKUciTUslkl8NqL/Ou/WsKSTIugEccGRwz8+kqdQAi/wBETEVmnmcsRol+jMycLmuVp1jpHheEGCfsueLzUr7PMdS5exXs2UswLJc0xy0NLzZggCIzoONFrUmPGBG9kcMZLQ41c5Cy1LlH2tO0X4OhWMclrgfoDDE2WXgqSZM63QEmQjhbs7zm1JNgO6eMWfuXKAJ82EBI6pIWx/yw8tutQ1y8QFFVe/JSiW4O1qvabkOkW1CbP5r7DSanre5eJPOZvjyRh5iaWxGMZPfnINcC4QPOK2keym61c="

# Commands to install dependencies
# --------------------------------
install:
    # Install ROS
    - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu `lsb_release -sc` main" > /etc/apt/sources.list.d/ros-latest.list'
    - wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
    - sudo apt-get update -qq
    - sudo apt-get install -qq -y python-catkin-pkg python-rosdep python-wstool ros-$ROS_DISTRO-catkin ros-$ROS_DISTRO-ros lcov
    - sudo apt-get install -qq -y mongodb ros-$ROS_DISTRO-warehouse-ros
    - sudo apt-get install -q -y ros-indigo-pr2-moveit-tutorials ros-$ROS_DISTRO-moveit-*
    - sudo pip install -U setuptools
    - sudo pip install -U catkin_tools
    - gem install coveralls-lcov
    - source /opt/ros/$ROS_DISTRO/setup.bash
    # Setup rosdep
    - sudo rosdep init
    - rosdep update
    # Create workspace.
    - mkdir -p ~/catkin_ws/src
    - cd ..; mv rapid ~/catkin_ws/src
    - cd ~/catkin_ws/src
    - git clone https://github.com/hcrlab/blinky.git
    - git clone https://github.com/jstnhuang/mongo_msg_db_msgs.git
    - git clone https://github.com/jstnhuang/mongo_msg_db.git
    - catkin_init_workspace
    # Install dependencies
    - cd ~/catkin_ws/
    - rosdep install --from-paths src --ignore-src --rosdistro=${ROS_DISTRO} -y
    # Install latest gmock
    - mkdir ~/local
    - cd ~/local
    - git clone https://github.com/google/googletest.git
    - cd ~/local/googletest
    - mkdir mybuild
    - cd ~/local/googletest/mybuild
    - cmake ..
    - make
    - sudo make install
    # Build
    - cd ~/catkin_ws
    - catkin build --cmake-args -DCAFFE_INSTALL_DIR="" -DCUDA_INSTALL_DIR=""

# Command to run tests
# --------------------
script:
    # Download test data
    - source ~/catkin_ws/devel/setup.bash --extend
    - cd ~/catkin_ws/src/rapid/rapid_perception/scripts
    - ./download_test_data.sh
    - cd ~/catkin_ws
    - catkin build --cmake-args -DCAFFE_INSTALL_DIR="" -DCUDA_INSTALL_DIR="" --catkin-make-args run_tests -- rapid --no-deps
    - catkin_test_results build/rapid_db
    - catkin_test_results build/rapid_display
    - catkin_test_results build/rapid_fetch
    - catkin_test_results build/rapid_manipulation
    - catkin_test_results build/rapid_pbd
    - catkin_test_results build/rapid_perception
    - catkin_test_results build/rapid_pr2
    - catkin_test_results build/rapid_ros
    - catkin_test_results build/rapid_sound
    - catkin_test_results build/rapid_utils
    - catkin_test_results build/rapid_viz

# Generate code coverage, other artifacts
# ---------------------------------------
after_success:
    - cd ~/catkin_ws/build
    - lcov --directory . --capture --output-file coverage.info
    - lcov --remove coverage.info '/opt/*' '/usr/*' '*/devel/*' '*test_*' '*_test*' --output-file coverage.info
    - lcov --list coverage.info
    - coveralls-lcov coverage.info
